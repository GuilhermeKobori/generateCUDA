p[0] = ksynp53mRNA * Source; 
p[1] = kdegp53mRNA * p53_mRNA; 
p[2] = ksynMdm2 * Mdm2_mRNA; 
p[3] = ksynMdm2mRNA * p53; 
p[4] = ksynMdm2mRNA * p53_P; 
p[5] = ksynMdm2mRNAGSK3bp53 * GSK3b_p53; 
p[6] = ksynMdm2mRNAGSK3bp53 * GSK3b_p53_P; 
p[7] = kdegMdm2mRNA * Mdm2_mRNA; 
p[8] = kbinMdm2p53 * p53 * Mdm2; 
p[9] = krelMdm2p53 * Mdm2_p53; 
p[10] = kbinGSK3bp53 * GSK3b * p53; 
p[11] = krelGSK3bp53 * GSK3b_p53; 
p[12] = kbinGSK3bp53 * GSK3b * p53_P; 
p[13] = krelGSK3bp53 * GSK3b_p53_P; 
p[14] = kbinE1Ub * E1 * Ub * ATP / (5000 + ATP); 
p[15] = kbinE2Ub * E2 * E1_Ub; 
p[16] = kMdm2Ub * Mdm2 * E2_Ub; 
p[17] = kMdm2PolyUb * Mdm2_Ub * E2_Ub; 
p[18] = kMdm2PolyUb * Mdm2_Ub2 * E2_Ub; 
p[19] = kMdm2PolyUb * Mdm2_Ub3 * E2_Ub; 
p[20] = kactDUBMdm2 * Mdm2_Ub4 * Mdm2DUB; 
p[21] = kactDUBMdm2 * Mdm2_Ub3 * Mdm2DUB; 
p[22] = kactDUBMdm2 * Mdm2_Ub2 * Mdm2DUB; 
p[23] = kactDUBMdm2 * Mdm2_Ub * Mdm2DUB; 
p[24] = kbinProt * Mdm2_Ub4 * Proteasome; 
p[25] = kdegMdm2 * Mdm2_Ub4_Proteasome * kproteff; 
p[26] = ksynp53 * p53_mRNA; 
p[27] = kp53Ub * E2_Ub * Mdm2_p53; 
p[28] = kp53PolyUb * Mdm2_p53_Ub * E2_Ub; 
p[29] = kp53PolyUb * Mdm2_p53_Ub2 * E2_Ub; 
p[30] = kp53PolyUb * Mdm2_p53_Ub3 * E2_Ub; 
p[31] = kactDUBp53 * Mdm2_p53_Ub4 * p53DUB; 
p[32] = kactDUBp53 * Mdm2_p53_Ub3 * p53DUB; 
p[33] = kactDUBp53 * Mdm2_p53_Ub2 * p53DUB; 
p[34] = kactDUBp53 * Mdm2_p53_Ub * p53DUB; 
p[35] = kphosMdm2GSK3b * Mdm2_p53_Ub4 * GSK3b; 
p[36] = kphosMdm2GSK3bp53 * Mdm2_p53_Ub4 * GSK3b_p53; 
p[37] = kphosMdm2GSK3bp53 * Mdm2_p53_Ub4 * GSK3b_p53_P; 
p[38] = kbinProt * Mdm2_P1_p53_Ub4 * Proteasome; 
p[39] = kdegp53 * kproteff * p53_Ub4_Proteasome * ATP / (5000 + ATP); 
p[40] = kbinMTTau * Tau; 
p[41] = krelMTTau * MT_Tau; 
p[42] = kphospTauGSK3bp53 * GSK3b_p53 * Tau; 
p[43] = kphospTauGSK3bp53 * GSK3b_p53 * Tau_P1; 
p[44] = kphospTauGSK3bp53 * GSK3b_p53_P * Tau; 
p[45] = kphospTauGSK3bp53 * GSK3b_p53_P * Tau_P1; 
p[46] = kphospTauGSK3b * GSK3b * Tau; 
p[47] = kphospTauGSK3b * GSK3b * Tau_P1; 
p[48] = kdephospTau * Tau_P2 * PP1; 
p[49] = kdephospTau * Tau_P1 * PP1; 
p[50] = kaggTauP1 * Tau_P1 * (Tau_P1 - 1) * 0.5; 
p[51] = kaggTauP1 * Tau_P1 * AggTau; 
p[52] = kaggTauP2 * Tau_P2 * (Tau_P2 - 1) * 0.5; 
p[53] = kaggTauP2 * Tau_P2 * AggTau; 
p[54] = kaggTau * Tau * (Tau - 1) * 0.5; 
p[55] = kaggTau * Tau * AggTau; 
p[56] = ktangfor * AggTau * (AggTau - 1) * 0.5; 
p[57] = ktangfor * AggTau * NFT; 
p[58] = kinhibprot * AggTau * Proteasome; 
p[59] = kprodAbeta * Source; 
p[60] = kprodAbeta2 * GSK3b_p53; 
p[61] = kprodAbeta2 * GSK3b_p53_P; 
p[62] = kinhibprot * AbetaDimer * Proteasome; 
p[63] = kdegAbeta * Abeta; 
p[64] = ksynp53mRNAAbeta * Abeta; 
p[65] = kdam * IR; 
p[66] = krepair * damDNA; 
p[67] = kactATM * damDNA * ATMI; 
p[68] = kphosp53 * p53 * ATMA; 
p[69] = kdephosp53 * p53_P; 
p[70] = kphosMdm2 * Mdm2 * ATMA; 
p[71] = kdephosMdm2 * Mdm2_P; 
p[72] = kMdm2PUb * Mdm2_P * E2_Ub; 
p[73] = kMdm2PolyUb * Mdm2_P_Ub * E2_Ub; 
p[74] = kMdm2PolyUb * Mdm2_P_Ub2 * E2_Ub; 
p[75] = kMdm2PolyUb * Mdm2_P_Ub3 * E2_Ub; 
p[76] = kactDUBMdm2 * Mdm2_P_Ub4 * Mdm2DUB; 
p[77] = kactDUBMdm2 * Mdm2_P_Ub3 * Mdm2DUB; 
p[78] = kactDUBMdm2 * Mdm2_P_Ub2 * Mdm2DUB; 
p[79] = kactDUBMdm2 * Mdm2_P_Ub * Mdm2DUB; 
p[80] = kbinProt * Mdm2_P_Ub4 * Proteasome; 
p[81] = kdegMdm2 * Mdm2_P_Ub4_Proteasome * kproteff; 
p[82] = kinactATM * ATMA; 
p[83] = kgenROSAbeta * Abeta; 
p[84] = kgenROSPlaque * AbetaPlaque; 
p[85] = kgenROSAbeta * AggAbeta_Proteasome; 
p[86] = kdamROS * ROS; 
p[87] = ksynTau * Source; 
p[88] = kbinTauProt * Tau * Proteasome; 
p[89] = kdegTau20SProt * Proteasome_Tau; 
p[90] = kaggAbeta * Abeta * (Abeta - 1) * 0.5; 
p[91] = kpf * AbetaDimer * (AbetaDimer - 1) * 0.5; 
p[92] = kpg * AbetaDimer * pow(AbetaPlaque, 2) / (pow(kpghalf, 2) + pow(AbetaPlaque, 2)); 
p[93] = kdisaggAbeta * AbetaDimer; 
p[94] = kdisaggAbeta1 * AbetaPlaque; 
p[95] = kdisaggAbeta2 * antiAb * AbetaPlaque; 
p[96] = kbinAbantiAb * Abeta * antiAb; 
p[97] = kbinAbantiAb * AbetaDimer * antiAb; 
p[98] = 10 * kdegAbeta * Abeta_antiAb; 
p[99] = 10 * kdegAbeta * AbetaDimer_antiAb; 
p[100] = kactglia1 * GliaI * AbetaPlaque; 
p[101] = kactglia1 * GliaM1 * AbetaPlaque; 
p[102] = kactglia2 * GliaM2 * antiAb; 
p[103] = kinactglia1 * GliaA; 
p[104] = kinactglia2 * GliaM2; 
p[105] = kinactglia2 * GliaM1; 
p[106] = kbinAbetaGlia * AbetaPlaque * GliaA; 
p[107] = krelAbetaGlia * AbetaPlaque_GliaA; 
p[108] = kdegAbetaGlia * AbetaPlaque_GliaA; 
p[109] = kgenROSGlia * AbetaPlaque_GliaA; 
p[110] = kdegAntiAb * antiAb; 
p[111] = kremROS * ROS; 
if(time >= step * stepCount){
atomicAdd(&output[stepCount*69 + 0], Mdm2);
atomicAdd(&output[stepCount*69 + 1], p53);
atomicAdd(&output[stepCount*69 + 2], Mdm2_p53);
atomicAdd(&output[stepCount*69 + 3], Mdm2_mRNA);
atomicAdd(&output[stepCount*69 + 4], p53_mRNA);
atomicAdd(&output[stepCount*69 + 5], ATMA);
atomicAdd(&output[stepCount*69 + 6], ATMI);
atomicAdd(&output[stepCount*69 + 7], p53_P);
atomicAdd(&output[stepCount*69 + 8], Mdm2_P);
atomicAdd(&output[stepCount*69 + 9], IR);
atomicAdd(&output[stepCount*69 + 10], ROS);
atomicAdd(&output[stepCount*69 + 11], damDNA);
atomicAdd(&output[stepCount*69 + 12], E1);
atomicAdd(&output[stepCount*69 + 13], E2);
atomicAdd(&output[stepCount*69 + 14], E1_Ub);
atomicAdd(&output[stepCount*69 + 15], E2_Ub);
atomicAdd(&output[stepCount*69 + 16], Proteasome);
atomicAdd(&output[stepCount*69 + 17], Ub);
atomicAdd(&output[stepCount*69 + 18], p53DUB);
atomicAdd(&output[stepCount*69 + 19], Mdm2DUB);
atomicAdd(&output[stepCount*69 + 20], DUB);
atomicAdd(&output[stepCount*69 + 21], Mdm2_p53_Ub);
atomicAdd(&output[stepCount*69 + 22], Mdm2_p53_Ub2);
atomicAdd(&output[stepCount*69 + 23], Mdm2_p53_Ub3);
atomicAdd(&output[stepCount*69 + 24], Mdm2_p53_Ub4);
atomicAdd(&output[stepCount*69 + 25], Mdm2_P1_p53_Ub4);
atomicAdd(&output[stepCount*69 + 26], Mdm2_Ub);
atomicAdd(&output[stepCount*69 + 27], Mdm2_Ub2);
atomicAdd(&output[stepCount*69 + 28], Mdm2_Ub3);
atomicAdd(&output[stepCount*69 + 29], Mdm2_Ub4);
atomicAdd(&output[stepCount*69 + 30], Mdm2_P_Ub);
atomicAdd(&output[stepCount*69 + 31], Mdm2_P_Ub2);
atomicAdd(&output[stepCount*69 + 32], Mdm2_P_Ub3);
atomicAdd(&output[stepCount*69 + 33], Mdm2_P_Ub4);
atomicAdd(&output[stepCount*69 + 34], p53_Ub4_Proteasome);
atomicAdd(&output[stepCount*69 + 35], Mdm2_Ub4_Proteasome);
atomicAdd(&output[stepCount*69 + 36], Mdm2_P_Ub4_Proteasome);
atomicAdd(&output[stepCount*69 + 37], GSK3b);
atomicAdd(&output[stepCount*69 + 38], GSK3b_p53);
atomicAdd(&output[stepCount*69 + 39], GSK3b_p53_P);
atomicAdd(&output[stepCount*69 + 40], Abeta);
atomicAdd(&output[stepCount*69 + 41], AggAbeta_Proteasome);
atomicAdd(&output[stepCount*69 + 42], AbetaPlaque);
atomicAdd(&output[stepCount*69 + 43], Tau);
atomicAdd(&output[stepCount*69 + 44], Tau_P1);
atomicAdd(&output[stepCount*69 + 45], Tau_P2);
atomicAdd(&output[stepCount*69 + 46], MT_Tau);
atomicAdd(&output[stepCount*69 + 47], AggTau);
atomicAdd(&output[stepCount*69 + 48], AggTau_Proteasome);
atomicAdd(&output[stepCount*69 + 49], Proteasome_Tau);
atomicAdd(&output[stepCount*69 + 50], PP1);
atomicAdd(&output[stepCount*69 + 51], NFT);
atomicAdd(&output[stepCount*69 + 52], ATP);
atomicAdd(&output[stepCount*69 + 53], ADP);
atomicAdd(&output[stepCount*69 + 54], AMP);
atomicAdd(&output[stepCount*69 + 55], AbetaDimer);
atomicAdd(&output[stepCount*69 + 56], AbetaPlaque_GliaA);
atomicAdd(&output[stepCount*69 + 57], GliaI);
atomicAdd(&output[stepCount*69 + 58], GliaM1);
atomicAdd(&output[stepCount*69 + 59], GliaM2);
atomicAdd(&output[stepCount*69 + 60], GliaA);
atomicAdd(&output[stepCount*69 + 61], antiAb);
atomicAdd(&output[stepCount*69 + 62], Abeta_antiAb);
atomicAdd(&output[stepCount*69 + 63], AbetaDimer_antiAb);
atomicAdd(&output[stepCount*69 + 64], degAbetaGlia);
atomicAdd(&output[stepCount*69 + 65], disaggPlaque1);
atomicAdd(&output[stepCount*69 + 66], disaggPlaque2);
atomicAdd(&output[stepCount*69 + 67], Source);
atomicAdd(&output[stepCount*69 + 68], Sink);
stepCount++;
}
sum_p = 0;
for(int i = 0; i < 112; i++){
sum_p += p[i];
}
curandState localState = state[threadIdx.x];
random = curand_uniform(&localState);
if(sum_p > 0) timeStep = -log(random)/sum_p;
else break;
random = curand_uniform(&localState);
reaction = -1;
sum_p_aux = 0;
random *= sum_p;
for(int i = 0; i < 112; i++){
sum_p_aux += p[i];
if(random < sum_p_aux){
reaction = i;
break;
}
}
speciesUpdate(reaction);
if(triggerEvent0 == 0 && time >= 345600){
triggerEvent0 = 1;
antiAb += 50;
}
time += timeStep;
}
}
