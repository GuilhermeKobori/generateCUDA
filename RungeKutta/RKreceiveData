cudaStatus = cudaGetLastError(); if (cudaStatus != cudaSuccess) {fprintf(stderr, "addKernel launch failed: %s\n", cudaGetErrorString(cudaStatus));goto Error;}

cudaStatus = cudaDeviceSynchronize(); if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaDeviceSynchronize returned error code %d after launching addKernel!\n", cudaStatus);goto Error;}cudaStatus = cudaMemcpy(Mdm2_results, dev_Mdm2_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(p53_results, dev_p53_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_p53_results, dev_Mdm2_p53_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_mRNA_results, dev_Mdm2_mRNA_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(p53_mRNA_results, dev_p53_mRNA_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(ATMA_results, dev_ATMA_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(ATMI_results, dev_ATMI_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(p53_P_results, dev_p53_P_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_P_results, dev_Mdm2_P_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(IR_results, dev_IR_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(ROS_results, dev_ROS_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(damDNA_results, dev_damDNA_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(E1_results, dev_E1_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(E2_results, dev_E2_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(E1_Ub_results, dev_E1_Ub_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(E2_Ub_results, dev_E2_Ub_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Proteasome_results, dev_Proteasome_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Ub_results, dev_Ub_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(p53DUB_results, dev_p53DUB_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2DUB_results, dev_Mdm2DUB_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(DUB_results, dev_DUB_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_p53_Ub_results, dev_Mdm2_p53_Ub_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_p53_Ub2_results, dev_Mdm2_p53_Ub2_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_p53_Ub3_results, dev_Mdm2_p53_Ub3_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_p53_Ub4_results, dev_Mdm2_p53_Ub4_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_P1_p53_Ub4_results, dev_Mdm2_P1_p53_Ub4_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_Ub_results, dev_Mdm2_Ub_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_Ub2_results, dev_Mdm2_Ub2_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_Ub3_results, dev_Mdm2_Ub3_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_Ub4_results, dev_Mdm2_Ub4_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_P_Ub_results, dev_Mdm2_P_Ub_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_P_Ub2_results, dev_Mdm2_P_Ub2_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_P_Ub3_results, dev_Mdm2_P_Ub3_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_P_Ub4_results, dev_Mdm2_P_Ub4_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(p53_Ub4_Proteasome_results, dev_p53_Ub4_Proteasome_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_Ub4_Proteasome_results, dev_Mdm2_Ub4_Proteasome_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Mdm2_P_Ub4_Proteasome_results, dev_Mdm2_P_Ub4_Proteasome_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(GSK3b_results, dev_GSK3b_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(GSK3b_p53_results, dev_GSK3b_p53_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(GSK3b_p53_P_results, dev_GSK3b_p53_P_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Abeta_results, dev_Abeta_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(AggAbeta_Proteasome_results, dev_AggAbeta_Proteasome_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(AbetaPlaque_results, dev_AbetaPlaque_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Tau_results, dev_Tau_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Tau_P1_results, dev_Tau_P1_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Tau_P2_results, dev_Tau_P2_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(MT_Tau_results, dev_MT_Tau_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(AggTau_results, dev_AggTau_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(AggTau_Proteasome_results, dev_AggTau_Proteasome_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Proteasome_Tau_results, dev_Proteasome_Tau_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(PP1_results, dev_PP1_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(NFT_results, dev_NFT_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(ATP_results, dev_ATP_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(ADP_results, dev_ADP_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(AMP_results, dev_AMP_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(AbetaDimer_results, dev_AbetaDimer_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(AbetaPlaque_GliaA_results, dev_AbetaPlaque_GliaA_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(GliaI_results, dev_GliaI_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(GliaM1_results, dev_GliaM1_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(GliaM2_results, dev_GliaM2_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(GliaA_results, dev_GliaA_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(antiAb_results, dev_antiAb_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Abeta_antiAb_results, dev_Abeta_antiAb_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(AbetaDimer_antiAb_results, dev_AbetaDimer_antiAb_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(degAbetaGlia_results, dev_degAbetaGlia_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(disaggPlaque1_results, dev_disaggPlaque1_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(disaggPlaque2_results, dev_disaggPlaque2_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Source_results, dev_Source_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaMemcpy(Sink_results, dev_Sink_results, 1000*sizeof(float), cudaMemcpyDeviceToHost);
if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaMemcpy failed!");goto Error;}
cudaStatus = cudaGetLastError(); if (cudaStatus != cudaSuccess) {fprintf(stderr, "addKernel launch failed: %s\n", cudaGetErrorString(cudaStatus));goto Error;}

cudaStatus = cudaDeviceSynchronize(); if (cudaStatus != cudaSuccess) {fprintf(stderr, "cudaDeviceSynchronize returned error code %d after launching addKernel!\n", cudaStatus);goto Error;}